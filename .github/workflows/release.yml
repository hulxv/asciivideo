name: Release

on:
  push:
    # Trigger release workflow on tags like v1.0.0
    tags:
      - 'v*'
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential
          # Install FFmpeg libraries required as dependencies
          sudo apt-get install -y libavcodec-dev libavformat-dev libavutil-dev libswscale-dev

      - name: Configure project with CMake
        run: cmake -S . -B build

      - name: Build project
        run: cmake --build build -- -j$(nproc)

      - name: Run tests
        run: ctest --test-dir build

      - name: Package build artifact
        run: |
          # Copy the built binary from build/bin/asciivideo to the workspace
          cp build/bin/asciivideo .
          # Rename the binary to include the version and linux suffix, e.g., asciivideo-v1.0.0-linux
          mv asciivideo asciivideo-${{ github.ref_name }}-linux
          # Compress the binary using gzip for release
          gzip -9 asciivideo-${{ github.ref_name }}-linux

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./asciivideo-${{ github.ref_name }}-linux.gz
          asset_name: asciivideo-${{ github.ref_name }}-linux.gz
          asset_content_type: application/gzip
